{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/eager/master/nextflow_schema.json",
    "title": "nf-core/eager pipeline parameters",
    "description": "A fully reproducible and state-of-the-art ancient DNA analysis pipeline",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(c|t)sv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to tab- or comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a tab- or comma-separated file with 11 columns, and a header row. See [usage docs](https://nf-co.re/eager/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "convert_inputbam": {
                    "type": "boolean",
                    "description": "Specify to convert input BAM files back to FASTQ for remapping",
                    "help_text": "This parameter tells the pipeline to convert the BAM files listed in the `--input` TSV or CSV sheet back to FASTQ format to allow re-preprocessing and mapping.\n\nCan be useful when you want to ensure consistent mapping parameters across all libraries when incorporating public data, however be careful of biases that may come from re-processing again (the BAM files may already be clipped, or only mapped reads with different settings are included so you may not have all reads from the original publication).",
                    "fa_icon": "fas fa-undo-alt"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "errorMessage": "The path to the reference FASTA file must not contain spaces and must have file extensions '.fasta', '.fa', '.fas', '.fna', '.fasta.gz','.fa.gz','.fas.gz' or '.fna.gz'.",
                    "description": "Path to FASTA file of the reference genome.",
                    "help_text": "This parameter is *mandatory* if `--genome` or `--fasta_sheet` are not specified. If you don't supply a mapper index (e.g. for BWA), this will be generated for you automatically. Combine with `--save_reference` to save mapper index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "fasta_fai": {
                    "type": "string",
                    "description": "Specify path to samtools FASTA index.",
                    "help_text": "If you want to use a pre-existing `samtools faidx` index, use this to specify the required FASTA index file for the selected reference genome. This should be generated by samtools faidx and has a file suffix of `.fai`.",
                    "fa_icon": "fas fa-address-book"
                },
                "fasta_dict": {
                    "type": "string",
                    "description": "Specify path to Picard sequence dictionary file.",
                    "help_text": "If you want to use a pre-existing `picard CreateSequenceDictionary` dictionary file, use this to specify the required `.dict` file for the selected reference genome.",
                    "fa_icon": "fas fa-address-book"
                },
                "fasta_mapperindexdir": {
                    "type": "string",
                    "description": "Specify path to directory containing index files of the FASTA for a given mapper.",
                    "help_text": "For most people this will likely be the same directory that contains the file you provided to `--fasta`.\n\nIf you want to use pre-existing `bwa index` indices, the directory should contain files ending in '.amb' '.ann' '.bwt'. If you want to use pre-existing `bowtie2 build` indices, the directory should contain files ending in'.1.bt2', '.2.bt2', '.rev.1.bt2'.\n\nIn any case do not include the files themselves in the path. nf-core/eager will automagically detect the index files by searching for the FASTA filename with the corresponding `bwa index`/`bowtie2 build` file suffixes. If not supplied, the indices will be generated for you.\n\n",
                    "fa_icon": "fas fa-folder-open"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "Specify to save any pipeline-generated reference genome indices in the results directory.",
                    "help_text": "Use this if you do not have pre-made reference FASTA indices for `bwa`, `samtools` and `picard`. If you turn this on, the indices nf-core/eager generates for you and will be saved in the `<your_output_dir>/results/reference_genomes` for you. If not supplied, nf-core/eager generated index references will be deleted.\n\n> Modifies SAMtools index command: `-c`",
                    "fa_icon": "fas fa-save"
                },
                "fasta_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(c|t)sv$",
                    "schema": "assets/schema_fasta.json",
                    "description": "Path to a tab-/comma-separated file containing reference-specific files.",
                    "help_text": "This parameter is *mandatory* if `--genome` or `--fasta` are not specified. If you don't supply a mapper index (e.g. for BWA), this will be generated for you automatically.",
                    "errorMessage": "The path to the reference sheet must not contain spaces and have file extension '.csv' or '.tsv'.",
                    "fa_icon": "fas fa-table"
                },
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes/",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "fasta_circular_target": {
                    "type": "string",
                    "description": "Specify the FASTA header of the target chromosome to extend when using `circularmapper`.",
                    "help_text": "The entry (chromosome, contig, etc.) in your FASTA reference that you'd like to be treated as circular.\n\nApplies only when providing a single FASTA file via `--fasta` (NOT multi-reference input - see reference TSV/CSV input).\n\n> Modifies tool parameter(s):\n> - circulargenerator `-s`",
                    "fa_icon": "fas fa-bullseye"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        },
        "preprocessing": {
            "title": "Preprocessing",
            "type": "object",
            "description": "Removal of adapters, paired-end merging, poly-G removal, etc.",
            "default": "",
            "properties": {
                "sequencing_qc_tool": {
                    "type": "string",
                    "default": "fastqc",
                    "description": "Specify which tool to use for sequencing quality control.",
                    "help_text": "Specify which tool to use for sequencing quality control.\n\nFalco is designed as a drop-in replacement for FastQC but written in C++ for faster computation. We recommend using falco with very large datasets (due to reduced memory constraints).",
                    "enum": ["fastqc", "falco"],
                    "fa_icon": "fas fa-hammer"
                },
                "skip_preprocessing": {
                    "type": "boolean",
                    "description": "Specify to skip all preprocessing steps (adapter removal, paired-end merging, poly-G trimming, etc).",
                    "help_text": "Specify to skip all preprocessing steps (adapter removal, paired-end merging, poly-G trimming etc).\n\nThis will also mean you will only get one set of FastQC results (of the input reads).",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_tool": {
                    "type": "string",
                    "default": "fastp",
                    "description": "Specify which preprocessing tool to use.",
                    "enum": ["fastp", "adapterremoval"],
                    "help_text": "Specify which preprocessing tool to use.\n\nAdapterRemoval is commonly used in palaeogenomics, however fastp has similar performance and has many additional functionality (including inbuilt complexity trimming) that can be often useful.",
                    "fa_icon": "fas fa-hammer"
                },
                "preprocessing_skippairmerging": {
                    "type": "boolean",
                    "description": "Specify to skip read-pair merging.",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Turns off the paired-end read merging, and will result in paired-end mapping modes being used during reference of reads again alignment.\n\nThis can be useful in cases where you have long ancient DNA reads, modern DNA or when you want to utilise mate-pair 'spatial' information.\n\n ⚠️ If you run this with --preprocessing_minlength set to a value (as is by default!), you may end up removing single reads from either the pair1 or pair2 file. These reads will be NOT be mapped when aligning with either BWA or bowtie, as both can only accept one (forward) or two (forward and reverse) FASTQs as input in paired-end mode.\n\n> ⚠️ If you run metagenomic screening as well as skipping merging, all reads will be screened as independent reads - not as pairs! - as all FASTQ files from BAM filtering are merged into one. This merged file is _not_ saved in results directory.\n\n> Modifies AdapterRemoval parameter: `--collapse`\n> Modifies fastp parameter: `--merge`"
                },
                "preprocessing_excludeunmerged": {
                    "type": "boolean",
                    "description": "Specify to exclude read-pairs that did not overlap sufficiently for merging (i.e., keep merged reads only).",
                    "fa_icon": "fas fa-trash-alt",
                    "help_text": "Specify to exclude read-pairs that did not overlap sufficiently for merging (i.e., keep merged reads only). Singletons (i.e. reads missing a pair) or un-merged reads (where there wasn't sufficient overlap) are discarded.\n\nMost ancient DNA molecules are very short, and the majority are expected to merge. Specifying this parameter can sometimes be useful when dealing with ultra-short aDNA reads to reduce the number of longer-reads you may have in your library that are derived from modern contamination. It can also speed up run time of mapping steps.\n\nYou may want to use this if you want ensure only the best quality reads for your analysis, but with the penalty of potentially losing still valid data (even if some reads have slightly lower quality and/or are longer). It is highly recommended when using 'dedup' deduplication tool."
                },
                "preprocessing_skipadaptertrim": {
                    "type": "boolean",
                    "description": "Specify to skip removal of adapters.",
                    "help_text": "Specify to turn off trimming of adapters from reads.\n\nYou may wish to do this if you are using publicly available data, that _should_ have all library artefacts from reads removed.\n\nThis will override any other adapter parameters provided (i.e, `--preprocessing_adapterlist` and `--preprocessing_adapter{1,2}` will be ignored)!\n\n> Modifies AdapterRemoval parameter: `--adapter1` and  `--adapter2` (sets both to an empty string)\n> Applies fastp parameter: `--disable_adapter_trimming`",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapter1": {
                    "type": "string",
                    "description": "Specify the nucleotide sequence for the forward read/R1.",
                    "fa_icon": "fas fa-grip-lines",
                    "help_text": "Specify a nucleotide sequence for the forward read/R1.\n\nIf not modified by the user, the default for the particular preprocessing tool will be used. Therefore, to turn off adapter trimming use `--preprocessing_skipadaptertrim`.\n\n> Modifies AdapterRemoval parameter: `--adapter1`\n> Modifies fastp parameter: `--adapter_sequence`"
                },
                "preprocessing_adapter2": {
                    "type": "string",
                    "description": "Specify the nucleotide sequence for the reverse read/R2.",
                    "fa_icon": "fas fa-grip-lines",
                    "help_text": "Specify a nucleotide sequence for the forward read/R2.\n\nIf not modified by the user, the default for the particular preprocessing tool will be used. To turn off adapter trimming use `--preprocessing_skipadaptertrim`.\n\n> Modifies AdapterRemoval parameter: `--adapter2`\n> Modifies fastp parameter: `--adapter_sequence_r2`"
                },
                "preprocessing_adapterlist": {
                    "type": "string",
                    "description": "Specify a list of all possible adapters to trim.",
                    "help_text": "Specify a file with a list of adapter (combinations) to remove from all files.\n\nOverrides the `--preprocessing_adapter1`/`--preprocessing_adapter2` parameters.\n\nNote that the two tools have slightly different behaviours.\n\nFor AdapterRemoval this consists of a two column table with a `.txt` extension: first column represents forward strand, second column for reverse strand. You must supply all possible combinations, one per line, and this list is applied to all files. Only Adapters in this list will be screened for and removed. See AdapterRemoval documentation for more information.\n\nFor fastp this consists of a standard FASTA format with a `.fasta`/`.fa`/`.fna`/`.fas` extension. The adapter sequence in this file should be at least 6bp long, otherwise it will be skipped. fastp will first perform auto-detection and removal of adapters and then _additionally_ remove adapters present in the FASTA file one by one will.\n\n> Modifies AdapterRemoval parameter: `--adapter-list`\n> Modifies fastp parameter: `--adapter_fasta`",
                    "fa_icon": "fas fa-list"
                },
                "preprocessing_minlength": {
                    "type": "integer",
                    "default": 25,
                    "description": "Specify the minimum length reads must have to be retained.",
                    "help_text": "Specify the minimum length reads must have to be retained.\n\nReads smaller than this length after trimming are discarded and not included in downstream analyses. Typically in ancient DNA, users will set this to 30 or for very old samples around 25 bp - reads any shorter that this often are not specific enough to provide useful information.\n\n> Modifies AdapterRemoval parameter: `--minlength`\n> Modifies fastp parameter: `--length_required`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "preprocessing_trim5p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify number of bases to hard-trim from 5 prime or front of reads.",
                    "help_text": "Specify number of bases to hard-trim from 5 prime or front of reads. Exact behaviour varies per tool, see documentation. By default set to `0` to not perform any hard trimming.\n\nThis parameter allows users to 'hard' remove a number of bases from the beginning or end of reads, regardless of quality.\n\n ⚠️ When this trimming occurs depends on the tool, i.e., the exact behaviour is not the same between AdapterRemoval and fastp.\n\nFor fastp: 5p/3p trimming occurs _prior_ to any other trimming (quality, poly-G, adapter). Please see the [fastp documentation](https://github.com/OpenGene/fastp#global-trimming) for more information. If you wish to use this to remove damage prior to mapping (to allow more specific mapping), ensure you have manually removed adapters/quality trimmed **prior** to giving the reads to nf-core/eager. Alternatively, you can use Bowtie 2's inbuilt pre-mapping read-end trimming functionality. Note that nf-core/eager only allows this hard trimming equally for both forward and reverse reads (i.e., you cannot provide different values for the 5p end for R1 and R2).\n\nFor AdapterRemoval, this trimming happens _after_ the removal of adapters, however prior to quality trimming. Therefore, this is more suitable for hard-removal of damage before mapping (however the Bowtie 2 system will be more reliable).\n\n> Modifies AdapterRemoval parameters: `--trim5p`\n> Modifies fastp parameters: `--trim_front1` and/or `--trim_front2`",
                    "fa_icon": "fas fa-cut"
                },
                "preprocessing_trim3p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify number of bases to hard-trim from 3 prime or tail of reads.",
                    "fa_icon": "fas fa-cut",
                    "help_text": "Specify number of bases to hard-trim from 3 prime or tail of reads. Exact behaviour varies per tool, see documentation. By default set to `0` to not perform any hard trimming.\n\nThis parameter allows users to 'hard' remove a number of bases from the beginning or end of reads, regardless of quality.\n\n⚠️ When this trimming occurs depends on the tool, i.e., the exact behaviour is not the same between AdapterRemoval and fastp.\n\nFor fastp: 5p/3p trimming occurs _prior_ to any other trimming (quality, poly-G, adapter). Please see the [fastp documentation](https://github.com/OpenGene/fastp#global-trimming) for more information. If you wish to use this to remove damage prior to mapping (to allow more specific mapping), ensure you have manually removed adapters/quality trimmed **prior** to giving the reads to nf-core/eager. Alternatively, you can use Bowtie 2's inbuilt pre-mapping read-end trimming functionality. Note that nf-core/eager only allows this hard trimming equally for both forward and reverse reads (i.e., you cannot provide different values for the 3p end for R1 and R2).\n\nFor AdapterRemoval, this trimming happens _after_ the removal of adapters, however prior to quality trimming. Therefore this is more suitable for hard-removal of damage before mapping (however the Bowtie 2 system will be more reliable).\n\n> Modifies AdapterRemoval parameters: `--trim3p`\n> Modifies fastp parameters: `--trim_tail1` and/or `--trim_tail2`"
                },
                "preprocessing_savepreprocessedreads": {
                    "type": "boolean",
                    "description": "Specify to save the preprocessed reads in the results directory.",
                    "fa_icon": "fas fa-save",
                    "help_text": "Specify to save the preprocessed reads in FASTQ format the results directory.\n\nThis can be useful for re-analysing FASTQ files manually, or uploading to public data repositories such as ENA/SRA (provided you don't filter by length or merge paired reads)."
                },
                "preprocessing_fastp_complexityfilter": {
                    "type": "boolean",
                    "description": "Specify to turn on sequence complexity filtering of reads.",
                    "help_text": "Performs a poly-G tail removal step in the beginning of the pipeline using fastp.\n\nThis can be useful for trimming ploy-G tails from short-fragments sequenced on two-colour Illumina chemistry such as NextSeqs or NovaSeqs (where no-fluorescence is read as a G on two-colour chemistry), which can inflate reported GC content values.\n\n> Modifies fastp parameter: `--trim_poly_g`",
                    "fa_icon": "fas fa-power-off"
                },
                "preprocessing_fastp_complexityfilter_threshold": {
                    "type": "integer",
                    "default": 10,
                    "description": "Specify the complexity threshold that must be reached or exceeded to retain reads.",
                    "help_text": "This option can be used to define the minimum length of a poly-G tail to begin low complexity trimming.\n\n> Modifies fastp parameter: `--poly_g_min_len`",
                    "fa_icon": "fas fa-filter"
                },
                "preprocessing_adapterremoval_preserve5p": {
                    "type": "boolean",
                    "description": "Skip AdapterRemoval quality and N base trimming at 5 prime end.",
                    "help_text": "Turns off quality based trimming at the 5p end of reads when any of the AdapterRemoval quality or N trimming options are used. Only 3p end of reads will be removed.\n\nThis also entirely disables quality based trimming of collapsed reads, since both ends of these are informative for PCR duplicate filtering. For more information see the AdapterRemoval [documentation](https://adapterremoval.readthedocs.io/en/stable/manpage.html#cmdoption-adapterremoval-preserve5p).\n\n> Modifies AdapterRemoval parameters: `--preserve5p`",
                    "fa_icon": "fas fa-shield-alt"
                },
                "preprocessing_adapterremoval_skipqualitytrimming": {
                    "type": "boolean",
                    "description": "Specify to skip AdapterRemoval quality and N trimming at the ends of reads.",
                    "help_text": "Turns off AdapterRemoval quality trimming from ends of reads.\n\nThis can be useful to reduce runtime when running public data that has already been processed.\n\n> Modifies AdapterRemoval parameters: `--trimqualities` ",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapterremoval_trimbasequalitymin": {
                    "type": "integer",
                    "default": 20,
                    "description": "Specify AdapterRemoval minimum base quality for trimming off bases.",
                    "help_text": "Defines the minimum read quality per base that is required for a base to be kept by AdapterRemoval. Individual bases at the ends of reads falling below this threshold will be clipped off.\n\n> Modifies AdapterRemoval parameter: `--minquality`",
                    "fa_icon": "fas fa-filter"
                },
                "preprocessing_adapterremoval_skipntrimming": {
                    "type": "boolean",
                    "description": "Specify to skip AdapterRemoval N trimming (quality trimming only).",
                    "help_text": "Turns off AdapterRemoval N trimming from ends of reads.\n\nThis can be useful to reduce runtime when running publicly available data that has already been processed.\n\n> Modifies AdapterRemoval parameters: `--trimns` ",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapterremoval_adapteroverlap": {
                    "type": "integer",
                    "default": 1,
                    "description": "Specify the AdapterRemoval minimum adapter overlap required for trimming.",
                    "fa_icon": "fas fa-filter",
                    "help_text": "Specifies a minimum number of bases that overlap with the adapter sequence before AdapterRemoval trims adapters sequences from reads.\n\n> Modifies AdapterRemoval parameter: `--minadapteroverlap`"
                },
                "preprocessing_adapterremoval_qualitymax": {
                    "type": "integer",
                    "default": 41,
                    "description": "Specify the AdapterRemoval maximum Phred score used in input FASTQ files.",
                    "help_text": "Specify maximum Phred score of the quality field of FASTQ files.\n\nThe quality-score range can vary depending on the machine and version (e.g. see diagram [here](https://en.wikipedia.org/wiki/FASTQ_format#Encoding), and this allows you to increase from the default AdapterRemoval value of 41.\n\nNote that while this can theoretically provide you with more confident and precise base call information, many downstream tools only accept FASTQ files with Phred scores limited to a max of 41, and therefore increasing the default for this parameter may make the resulting preprocessed files incompatible with some downstream tools.\n\n> Modifies AdapterRemoval parameters: `--qualitymax`",
                    "fa_icon": "fas fa-tachometer-alt"
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "mapping": {
            "title": "Mapping",
            "type": "object",
            "description": "Options for aligning reads against reference genome(s)",
            "default": "",
            "properties": {
                "run_fastq_sharding": {
                    "type": "boolean",
                    "description": "Specify to turn on FASTQ sharding.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Sharding will split the FASTQs into smaller chunks before mapping. These chunks are then mapped in parallel. This approach can speed up the mapping process for larger FASTQ files."
                },
                "fastq_shard_size": {
                    "type": "integer",
                    "default": 1000000,
                    "description": "Specify the number of reads in each shard when splitting.",
                    "fa_icon": "fas fa-arrows-alt-v",
                    "help_text": "Make sure to choose a value that makes sense for your dataset. Small values can create many files, which can end up negatively affecting the overall speed of the mapping process."
                },
                "mapping_tool": {
                    "type": "string",
                    "default": "bwaaln",
                    "enum": ["bwaaln", "bwamem", "bowtie2", "circularmapper"],
                    "description": "Specify which mapper to use.",
                    "help_text": "Specify which mapping tool to use. Options are BWA aln ('`bwaaln`'), BWA mem ('`bwamem`'), circularmapper ('`circularmapper`'), or Bowtie 2 ('`bowtie2`'). BWA aln is the default and highly suited for short-read ancient DNA. BWA mem can be quite useful for modern DNA, but is rarely used in projects for ancient DNA. CircularMapper enhances the mapping procedure to circular references, using the BWA algorithm but utilizing an extend-remap procedure (see [Peltzer et al 2016](https://doi.org/10.1186/s13059-016-0918-z) for details). Bowtie 2 is similar to BWA aln, and has recently been suggested to provide slightly better results under certain conditions ([Poullet and Orlando 2020](https://doi.org/10.3389/fevo.2020.00105)), as well as providing extra functionality (such as FASTQ trimming).\n\nMore documentation can be seen for each tool under:\n\n- [BWA aln](http://bio-bwa.sourceforge.net/bwa.shtml#3)\n- [BWA mem](http://bio-bwa.sourceforge.net/bwa.shtml#3)\n- [CircularMapper](https://circularmapper.readthedocs.io/en/latest/contents/userguide.html)\n- [Bowtie 2](http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#command-line)",
                    "fa_icon": "fas fa-hammer"
                },
                "fasta_largeref": {
                    "type": "boolean",
                    "description": "Specify to generate '.csi' BAM indices instead of '.bai' for larger reference genomes.",
                    "help_text": "This parameter is required to be set for large reference genomes. If your reference genome is larger than 3.5GB, the `samtools index` calls in the pipeline need to generate `.csi` indices instead of `.bai` indices to compensate for the size of the reference genome (with samtools: `-c`). This parameter is not required for smaller references (including the human reference genomes hg19 or grch37/grch38).",
                    "fa_icon": "fas fa-address-book"
                },
                "mapping_bwaaln_n": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Specify the amount of allowed mismatches in the alignment for mapping with BWA aln.",
                    "help_text": "Specify how many mismatches are allowed in a read during alignment with BWA aln. Default is set following recommendations from [Oliva et al. 2021](https://doi.org/10.1093/bib/bbab076) who compared alignment to human reference genomes.\n\nIf you're uncertain what value to use, check out this [Shiny App](https://apeltzer.shinyapps.io/bwa-mismatches/) for more information.\n\n> Modifies BWA aln parameter: `-n`",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "mapping_bwaaln_k": {
                    "type": "integer",
                    "default": 2,
                    "description": "Specify the maximum edit distance allowed in a seed for mapping with BWA aln.",
                    "help_text": "Specify the maximum edit distance during the seeding phase of the BWA aln mapping algorithm.\n\n> Modifies BWA aln parameter: `-k`",
                    "fa_icon": "fas fa-people-arrows"
                },
                "mapping_bwaaln_l": {
                    "type": "integer",
                    "default": 1024,
                    "description": "Specify the length of seeds to be used for BWA aln.",
                    "help_text": "Specify the length of the seed used in BWA aln. Default is set to be 'turned off' at the recommendation of [Oliva et al. 2021](https://doi.org/10.1093/bib/bbab076) who tested when aligning to human reference genomes. Seeding is 'turned off' by specifying an arbitrarily long number to force the entire read to act as the seed.\n\nNote: Despite being recommended, turning off seeding can result in long runtimes!\n\n> Modifies BWA aln parameter: `-l`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "mapping_bwaaln_o": {
                    "type": "integer",
                    "default": 2,
                    "description": "Specify the number of gaps allowed for alignment with BWA aln.",
                    "help_text": "Specify the number of gaps allowed for mapping with BWA aln. Default is set to BWA default.\n\n> Modifies BWA aln parameter: `-o`",
                    "fa_icon": "fas fa-people-arrows"
                },
                "mapping_bwamem_k": {
                    "type": "integer",
                    "default": 19,
                    "description": "Specify the  minimum seed length for alignment with BWA mem.",
                    "help_text": "Configures the minimum seed length used in BWA mem. Default is set to BWA default.\n\n> Modifies BWA mem parameter: `-k`",
                    "fa_icon": "fas fa-seedling"
                },
                "mapping_bwamem_r": {
                    "type": "number",
                    "default": 1.5,
                    "description": "Specify the re-seeding threshold for alignment with BWA mem.",
                    "help_text": "Configures the re-seeding threshold used in BWA mem. Default is set to BWA default.\n\n> Modifies BWA mem parameter: `-r`",
                    "fa_icon": "fas fa-angle-double-left"
                },
                "mapping_bowtie2_alignmode": {
                    "type": "string",
                    "default": "local",
                    "description": "Specify the Bowtie 2 alignment mode.",
                    "help_text": "Specify the type of read alignment to use with Bowtie 2. 'Local' allows only partial alignment of read with ends of reads possibly 'soft-clipped' (i.e. remain unaligned/ignored), if the soft-clipped alignment provides best alignment score. 'End-to-end' requires all nucleotides to be aligned.\nDefault is set following [Cahill et al (2018)](https://doi.org/10.1093/molbev/msy018) and [Poullet and Orlando 2020](https://www.frontiersin.org/articles/10.3389/fevo.2020.00105/full)\n\n> Modifies Bowtie 2 presets: `--local`, `--end-to-end`",
                    "fa_icon": "fas fa-toggle-on",
                    "enum": ["local", "end-to-end"]
                },
                "mapping_bowtie2_sensitivity": {
                    "type": "string",
                    "default": "sensitive",
                    "description": "Specify the level of sensitivity for the Bowtie 2 alignment mode.",
                    "help_text": "Specify the Bowtie 2 'preset' to use. These strings apply to both `--mapping_bowtie2_alignmode` options. See the Bowtie 2 manual for actual settings.\nDefault is set following [Poullet and Orlando (2020)](https://www.frontiersin.org/articles/10.3389/fevo.2020.00105/full), when running damaged-data without UDG treatment.\n\n> Modifies the Bowtie 2 parameters: `--fast`, `--very-fast`, `--sensitive`, `--very-sensitive`, `--fast-local`, `--very-fast-local`, `--sensitive-local`, `--very-sensitive-local`",
                    "fa_icon": "fas fa-microscope",
                    "enum": ["fast", "very-fast", "sensitive", "very-sensitive"]
                },
                "mapping_bowtie2_n": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the number of mismatches in seed for alignment with Bowtie 2.",
                    "help_text": "Specify the number of mismatches allowed in the seed during seed-and-extend procedure of Bowtie 2. This will override any values set with `--mapping_bowtie2_sensitivity`. Can either be 0 or 1.\n\n> Modifies Bowtie 2 parameter: `-N`",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "mapping_bowtie2_l": {
                    "type": "integer",
                    "default": 20,
                    "description": "Specify the length of seed substrings for Bowtie 2.",
                    "help_text": "Specify the length of the seed sub-string to use during seeding of Bowtie 2. This will override any values set with `--mapping_bowtie2_sensitivity`.\n\n> Modifies Bowtie 2 parameter: `-L`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "mapping_bowtie2_trim5": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the number of bases to trim off from 5 prime end of read before alignment with Bowtie 2.",
                    "help_text": "Specify the number of bases to trim at the 5' (left) end of read before alignment with Bowtie 2. This may be useful when left-over sequencing artefacts of in-line barcodes are present.\n\n> Modifies Bowtie 2 parameter: `--trim5`",
                    "fa_icon": "fas fa-cut"
                },
                "mapping_bowtie2_trim3": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the number of bases to trim off from 3 prime end of read before alignment with Bowtie 2.",
                    "help_text": "Specify the number of bases to trim at the 3' (right) end of read before alignment with Bowtie 2. This may be useful when left-over sequencing artefacts of in-line barcodes are present.\n\n> Modifies Bowtie 2 parameter: `--trim3`",
                    "fa_icon": "fas fa-cut"
                },
                "mapping_bowtie2_maxins": {
                    "type": "integer",
                    "default": 500,
                    "description": "Specify the maximum fragment length for Bowtie 2 paired-end mapping mode only.",
                    "help_text": "Specify the maximum fragment length for valid paired-end alignments in Bowtie 2. This only applies to paired-end mapping (i.e. unmerged) and is therefore typically only useful for modern data.\n\n> Modifies Bowtie 2 parameter: `--maxins`",
                    "fa_icon": "fas fa-filter"
                }
            },
            "fa_icon": "fas fa-layer-group"
        },
        "bam_filtering": {
            "title": "BAM Filtering",
            "type": "object",
            "description": "Options related to length, quality, and map status filtering of reads.",
            "default": "",
            "properties": {
                "run_bamfiltering": {
                    "type": "boolean",
                    "description": "Specify to turn on filtering of reads in BAM files after mapping. By default, only mapped reads retained.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Specify to turns on the filtering subworkflow for mapped BAM files after the read alignment step. Filtering includes removal of unmapped reads, length filtering, and mapping quality filtering.\n\nWhen turning on BAM filtering, by default only the mapped/unmapped filter is activated, thus only mapped reads are retained for downstream analyses. See `--bamfiltering_retainunmappedgenomicbam` to retain unmapped reads, if filtering only for length and/or quality is preferred.\n\nNote this subworkflow can also be activated if `--run_metagenomic_screening` is supplied."
                },
                "bamfiltering_minreadlength": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the minimum read length mapped reads should have for downstream genomic analysis.",
                    "help_text": "Specify to remove mapped reads that fall below a certain length threshold after mapping.\n\nThis can be useful to get more realistic 'endogenous DNA' or 'on target read' percentages.\n\nIf used _instead of_ minimum length read filtering at AdapterRemoval, you can get more more realistic endogenous DNA estimates when most of your reads are very short (e.g. in single-stranded libraries or samples with highly degraded DNA). In these cases, the default minimum length filter at earlier adapter clipping/read merging will remove a very large amount of your reads in your library (including valid reads), thus making an artificially small denominator for a typical endogenous DNA calculation.\n\nTherefore by retaining all of your reads until _after_ mapping (i.e., turning off the  adapter clipping/read merging filter), you can generate more 'real' endogenous DNA estimates immediately after mapping (with a better denominator). Then after estimating this, filter using this parameter to retain only 'useful' reads (i.e., those long enough to provide higher confidence of their mapped position) for downstream analyses.\n\nBy specifying `0`, no length filtering is performed.\n\nNote that by default the output BAM files of this step are _not_ stored in the results directory (as it is assumed that deduplicated BAM files are preferred). See `--bamfiltering_savefilteredbams` if you wish to save these.\n\n> Modifies filter_bam_fragment_length.py parameter: `-l`",
                    "fa_icon": "fas fa-filter"
                },
                "bamfiltering_mappingquality": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the minimum mapping quality reads should have for downstream genomic analysis.",
                    "help_text": "Specify a mapping quality threshold for mapped reads to be kept for downstream analysis.\n\nBy default all reads are retained and this option is therefore set to 0 to ensure no quality filtering is performed.\n\nNote that by default the output BAM files of this step are _not_ stored in the results directory (as it is assumed that deduplicated BAM files are preferred). See `--bamfiltering_savefilteredbams` if you wish to save these.\n\n> Modifies samtools view parameter: `-q`",
                    "fa_icon": "fas fa-filter"
                },
                "bamfilter_genomicbamfilterflag": {
                    "type": "integer",
                    "default": 4,
                    "fa_icon": "fas fa-flag",
                    "description": "Specify the SAM format flag of reads to remove during BAM filtering for downstream genomic steps.",
                    "help_text": "Specify to customise the exact SAM format flag of reads you wish to _remove_ from your BAM file to for downstream _genomic_ analyses.\n\nYou can explore more using a tool from the Broad Institute [here](https://broadinstitute.github.io/picard/explain-flags.html)\n\n> ⚠️ Modify at your own risk, alternative flags are not necessarily supported in downstream steps!\n\n> Modifies samtools parameter: `-F`"
                },
                "bamfiltering_retainunmappedgenomicbam": {
                    "type": "boolean",
                    "description": "Specify to retain unmapped reads in the BAM file used for downstream genomic analyses.",
                    "help_text": "Specify to retain unmapped reads (optionally also length-filtered) in the genomic BAM for downstream analysis. By default, the pipeline only keeps mapped reads for downstream analysis.\n\nThis is also turned on if `--metagenomicscreening_input` is set to `all`.\n\n> ⚠️ This will likely slow down run time of downstream pipeline steps!\n\n> Modifies samtools view parameters: `-f 4` / `-F 4`",
                    "fa_icon": "fas fa-piggy-bank"
                },
                "bamfiltering_generateunmappedfastq": {
                    "type": "boolean",
                    "description": "Specify to generate FASTQ files containing only unmapped reads from the aligner generated BAM files.",
                    "help_text": "Specify to turn on the generation and saving of FASTQs of only the unmapped reads from the mapping step in the results directory.\n\nThis can be useful if you wish to do other analysis of the unmapped reads independently of the pipeline.\n\nNote: the reads in these FASTQ files have _not_ undergone length of quality filtering\n\n> Modifies samtools fastq parameter: `-f 4`",
                    "fa_icon": "fas fa-file-alt"
                },
                "bamfiltering_generatemappedfastq": {
                    "type": "boolean",
                    "description": "Specify to generate FASTQ files containing only mapped reads from the aligner generated BAM files.",
                    "help_text": "Specify to turn on the generation and saving of FASTQs of only the mapped reads from the mapping step in the results directory.\n\nThis can be useful if you wish to do other analysis of the mapped reads independently of the pipeline, such as remapping with different parameters (whereby only including mapped reads will speed up computation time during the re-mapping due to reduced input data).\n\nNote the reads in these FASTQ files have _not_ undergone length of quality filtering\n\n> Modifies samtools fastq parameter: `-F 4`",
                    "fa_icon": "far fa-file-alt"
                },
                "bamfiltering_savefilteredbams": {
                    "type": "boolean",
                    "description": "Specify to save the intermediate filtered genomic BAM files in the results directory.",
                    "help_text": "Specify to save intermediate length- and/or quality-filtered genomic BAM files in the results directory.",
                    "fa_icon": "fas fa-save"
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "metagenomics": {
            "title": "Metagenomics",
            "type": "object",
            "description": "Options related to metagenomic screening.",
            "default": "",
            "properties": {
                "run_metagenomicscreening": {
                    "type": "boolean",
                    "description": "Specify to turn on metagenomic screening of mapped, unmapped or all reads.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Specify to turn on the metagenomic screening subworkflow of the pipeline, where reads are screened against large databases. Typically used for pathogen screening or microbial community analysis.\n\nIf supplied, this will also turn on the BAM filtering subworkflow of the pipeline."
                },
                "metagenomicscreening_input": {
                    "type": "string",
                    "default": "unmapped",
                    "description": "Specify which type of reads to use for metagenomic screening.",
                    "enum": ["unmapped", "mapped", "all"],
                    "fa_icon": "fas fa-hand-pointer",
                    "help_text": "Specify to select which mapped reads will be sent for metagenomic analysis.\n\nThis influences which reads are sent to this step, whether you want unmapped reads (used in most cases, as 'host reads' can often be contaminants in microbial genomes), mapped reads (e.g, when doing competitive against a genomic reference of multiple genomes and which to apply LCA correction) or all reads.\n\n> ⚠️ If you skip paired-end merging, all reads will be screened as independent reads - not as pairs! - as all FASTQ files from BAM filtering are merged into one. This merged file is _not_ saved in results directory.\n\n> Modifies samtools fastq parameters: `-f 4` / `-F 4`"
                },
                "run_metagenomics_complexityfiltering": {
                    "type": "boolean",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Specify to turn on a subworkflow of the pipeline that filters the FASTQ files for complexity before the metagenomics profiling.\nUse the metagenomics_complexity_tool parameter to select a method.",
                    "description": "Specify to run a complexity filter on the metagenomics input files before classification."
                },
                "metagenomics_complexity_savefastq": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Specify to save FASTQ files containing the complexity-filtered reads before metagenomic classification.",
                    "help_text": "Specify to save the complexity-filtered FASTQ files to the results directory."
                },
                "metagenomics_complexity_tool": {
                    "type": "string",
                    "default": "bbduk",
                    "description": "Specify which tool to use for trimming, filtering or reformatting of FASTQ reads that go into metagenomics screening.",
                    "enum": ["bbduk", "prinseq"],
                    "fa_icon": "fas fa-hammer",
                    "help_text": "Specify to select which tool is used to generate a final set of reads for the metagenomic classifier after any necessary trimming, filtering or reformatting of the reads.\n\nThis intermediate file is not saved in the results directory unless marked with `--metagenomics_complexity_savefastq`."
                },
                "metagenomics_complexity_entropy": {
                    "type": "number",
                    "fa_icon": "fas fa-sort-numeric-up",
                    "description": "Specify the entropy threshold under which a sequencing read will be complexity-filtered out.",
                    "default": 0.3,
                    "help_text": "Specify the minimum 'entropy' value for complexity filtering for the BBDuk or PRINSEQ++ tools.\n\nThis value will only be used for PRINSEQ++ if `--metagenomics_prinseq_mode` is set to `entropy`.\n\nEntropy here corresponds to the amount of sequence variation existing within the read. Higher values correspond to more variety and thus will likely result in more specific matching to a taxon's reference genome. The trade-off here is fewer reads (or abundance information) available for having a confident identification.\n\n> Modifies parameters:\n> - BBDuk: `entropy=`\n> - PRINSEQ++: `-lc_entropy`"
                },
                "metagenomics_prinseq_mode": {
                    "type": "string",
                    "default": "entropy",
                    "enum": ["entropy", "dust"],
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Specify the complexity filter mode for PRINSEQ++.",
                    "help_text": "Specify the complexity filter mode for PRINSEQ++.\n\nUse the selected mode together with the correct flag:\n'dust' requires the `--metagenomics_prinseq_dustscore` parameter set\n'entropy' requires the `--metagenomics_complexity_entropy` parameter set\n\n> Modifies parameters:\n> - PRINSEQ++: `-lc_entropy`\n> - PRINSEQ++: `-lc_dust`"
                },
                "metagenomics_prinseq_dustscore": {
                    "type": "number",
                    "default": 0.5,
                    "fa_icon": "fas fa-filter",
                    "description": "Specify the minimum dust score for PRINTSEQ++ complexity filtering.",
                    "help_text": "Specify the minimum dust score below which low-complexity reads will be removed. A dust score is based on how often different tri-nucleotides occur along a read.\n\n> Modifies PRINSEQ++ parameter: `--lc_dust`"
                }
            },
            "fa_icon": "fas fa-search"
        },
        "deduplication": {
            "title": "Deduplication",
            "type": "object",
            "description": "Options for removal of PCR duplicates",
            "default": "",
            "properties": {
                "skip_deduplication": {
                    "type": "boolean",
                    "description": "Specify to skip the removal of PCR duplicates.",
                    "fa_icon": "fas fa-forward"
                },
                "deduplication_tool": {
                    "type": "string",
                    "default": "markduplicates",
                    "description": "Specify which tool to use for deduplication.",
                    "help_text": "Specify which duplicate read removal tool to use. While `markduplicates` is set by default, an ancient DNA specific read deduplication tool `dedup` is offered (see [Peltzer et al. 2016](https://doi.org/10.1186/s13059-016-0918-z) for details). The latter utilises both ends of paired-end data to remove duplicates (i.e. true exact duplicates, as markduplicates will over-zealously deduplicate anything with the same starting position even if the ends are different).\n\n> ⚠️ DeDup can only be used on collapsed (i.e. merged) reads from paired-end sequencing.",
                    "enum": ["markduplicates", "dedup"],
                    "fa_icon": "fas fa-hammer"
                }
            },
            "fa_icon": "fas fa-clone"
        },
        "damage_manipulation": {
            "title": "Damage Manipulation",
            "type": "object",
            "description": "Options for filtering for, trimming or rescaling characteristic ancient DNA damage patterns",
            "default": "",
            "fa_icon": "fas fa-chart-line",
            "properties": {
                "run_mapdamage_rescaling": {
                    "type": "boolean",
                    "fa_icon": "fas fa-power-off",
                    "description": "Specify to turn on damage rescaling of BAM files using mapDamage2 to probabilistically remove damage.",
                    "help_text": "Specify to turn on mapDamage2's BAM rescaling functionality. This probabilistically replaces Ts back to Cs depending on the likelihood this reference-mismatch was originally caused by damage. If the library is specified to be single-stranded, this will automatically use the `--single-stranded` mode.\nThis process will ameliorate the effects of aDNA damage, but also increase reference-bias.\n\n**This functionality does not have any MultiQC output.**\n ⚠️ Rescaled libraries will not be merged with non-scaled libraries of the same sample for downstream genotyping, as the model may be different for each library. If you wish to merge these, please do this manually and re-run nf-core/eager using the merged BAMs as input.\n\n> Modifies mapDamage2 parameter: `--rescale`"
                },
                "damage_manipulation_rescale_seqlength": {
                    "type": "integer",
                    "default": 12,
                    "description": "Specify the length of read sequence to use from each side for rescaling.",
                    "help_text": "Specify the length in bp from the end of the read that mapDamage should rescale at both ends. This can be overridden by `--rescalelength*p`.\n\n> Modifies mapDamage2 parameter: `--seq-length`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "damage_manipulation_rescale_length_5p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the length of read for mapDamage2 to rescale from 5 prime end.",
                    "help_text": "Specify the length in bp from the end of the read that mapDamage should rescale. This overrides `--rescale_seqlength`.\n\n> Modifies mapDamage2 parameter: `--rescale-length-5p`",
                    "fa_icon": "fas fa-balance-scale-right"
                },
                "damage_manipulation_rescale_length_3p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the length of read for mapDamage2 to rescale from 3 prime end.",
                    "help_text": "Specify the length in bp from the end of the read that mapDamage should rescale. This overrides `--rescale_seqlength`.\n\n> Modifies mapDamage2 parameter `--rescale-length-3p`",
                    "fa_icon": "fas fa-balance-scale-left"
                },
                "run_pmd_filtering": {
                    "type": "boolean",
                    "description": "Specify to turn on PMDtools filtering.",
                    "help_text": "Specify to run PMDtools for damage-based read filtering in sequencing libraries.",
                    "fa_icon": "fas fa-power-off"
                },
                "damage_manipulation_pmdtools_threshold": {
                    "type": "integer",
                    "default": 3,
                    "fa_icon": "far fa-chart-bar",
                    "description": "Specify PMD score threshold for PMDtools.",
                    "help_text": "Specify the PMDScore threshold to use when filtering BAM files for DNA damage. Only reads which surpass this damage score are considered for downstream analysis.\n\n> Modifies PMDtools parameter: `--threshold`"
                },
                "damage_manipulation_pmdtools_masked_reference": {
                    "type": "string",
                    "fa_icon": "fas fa-mask",
                    "help_text": "Specify a FASTA file to use as reference for `samtools calmd` prior to PMD filtering.\nSetting the SNPs that are part of the used capture set as `N` can alleviate reference bias when running PMD filtering on capture data, where you might not want the allele of a SNP to be counted as damage when it is a transition.",
                    "description": "Specify a masked FASTA file with positions to be used with PMDtools.",
                    "pattern": "^\\S+\\.fa?(\\sta)$",
                    "format": "file-path"
                },
                "damage_manipulation_pmdtools_reference_mask": {
                    "type": "string",
                    "fa_icon": "fas fa-mask",
                    "help_text": "Specify a BED file to activate masking of the reference FASTA at the contained sites prior to running PMDtools. Positions that are in the provided BED file will be replaced by Ns in the reference genome.\nThis can alleviate reference bias when running PMD filtering on capture data, where you might not want the allele of a transition SNP to be counted as damage. Masking of the reference is done using `bedtools maskfasta`.",
                    "description": "Specify a BED file to be used to mask the reference FASTA prior to running PMDtools.",
                    "pattern": "^\\S+\\.bed?(\\.gz)$",
                    "format": "file-path"
                },
                "run_trim_bam": {
                    "type": "boolean",
                    "fa_icon": "fas fa-power-off",
                    "description": "Specify to turn on BAM trimming for non-UDG or half-UDG libraries.",
                    "help_text": "Specify to turn on the BAM trimming of [n] bases from reads in the deduplicated BAM file. Damage assessment in PMDtools or DamageProfiler remains untouched, as data is routed through this independently. BAM trimming is typically performed to reduce errors during genotyping that can be caused by aDNA damage.\n\nBAM trimming will only affect libraries with 'damage_treatment' of  'none' or 'half'. Complete UDG treatment ('full') should have removed all damage during library construction, so trimming of 0 bp is performed. The amount of bases that will be trimmed off from each side of the molecule should be set separately for libraries depending on their 'strandedness' and 'damage_treatment'.\n\n> Note: additional artefacts such as barcodes or adapters should be removed prior to mapping and not in this step."
                },
                "damage_manipulation_bamutils_trim_double_stranded_none_udg_left": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "description": "Specify the number of bases to clip off reads from 'left' (5 prime) end of reads for double-stranded non-UDG libraries.",
                    "help_text": "Specify the number of bases to clip off reads from 'left' (5 prime) end of reads for double-stranded non-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the left side of reads from double-stranded libraries whose UDG treatment is set to 'none'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-L`"
                },
                "damage_manipulation_bamutils_trim_double_stranded_none_udg_right": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "description": "Specify the number of bases to clip off reads from 'right' (3 prime) end of reads for double-stranded non-UDG libraries.",
                    "help_text": "Specify the number of bases to clip off reads from 'right' (3 prime) end of reads for double-stranded non-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the right side of reads from double-stranded libraries whose UDG treatment is set to 'none'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-R`"
                },
                "damage_manipulation_bamutils_trim_double_stranded_half_udg_left": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "help_text": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for double-stranded half-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the left side of reads from double-stranded libraries whose UDG treatment is set to 'half'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-L`",
                    "description": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for double-stranded half-UDG libraries."
                },
                "damage_manipulation_bamutils_trim_double_stranded_half_udg_right": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "description": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for double-stranded half-UDG libraries.",
                    "help_text": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for double-stranded half-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the right side of reads from double-stranded libraries whose UDG treatment is set to 'half'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-R`"
                },
                "damage_manipulation_bamutils_trim_single_stranded_none_udg_left": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "help_text": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for single-stranded non-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the left side of reads from single-stranded libraries whose UDG treatment is set to 'none'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-L`",
                    "description": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for single-stranded non-UDG libraries."
                },
                "damage_manipulation_bamutils_trim_single_stranded_none_udg_right": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "description": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for single-stranded non-UDG libraries.",
                    "help_text": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for single-stranded non-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the right side of reads from single-stranded libraries whose UDG treatment is set to 'none'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-R`"
                },
                "damage_manipulation_bamutils_trim_single_stranded_half_udg_left": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "help_text": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for single-stranded half-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the left side of reads from single-stranded libraries whose UDG treatment is set to 'half'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-L`",
                    "description": "Specify the number of bases to clip off reads from 'left' (5 prime) end of read for single-stranded half-UDG libraries."
                },
                "damage_manipulation_bamutils_trim_single_stranded_half_udg_right": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-cut",
                    "description": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for single-stranded half-UDG libraries.",
                    "help_text": "Specify the number of bases to clip off reads from 'right' (3 prime) end of read for single-stranded half-UDG libraries. By default, this is set to 0, and therefore clips off no bases on the right side of reads from single-stranded libraries whose UDG treatment is set to 'half'. Note that reverse reads will automatically be clipped off at the reverse side with this (automatically reverses left and right for the reverse read).\n\n> Modifies bamUtil's trimBam parameter: `-R`"
                },
                "damage_manipulation_bamutils_softclip": {
                    "type": "boolean",
                    "fa_icon": "fas fa-mask",
                    "description": "Specify to turn on soft-trimming instead of hard masking.",
                    "help_text": "Specify to turn on soft-trimming instead of hard masking of bases. By default, nf-core/eager uses hard trimming, which sets trimmed bases to 'N' with quality '!' in the BAM output. Turn this on to use soft-trimming instead, which masks reads at the read ends using the CIGAR string instead.\n\n> Modifies bamUtil's trimBam parameter: `-c`"
                }
            }
        },
        "genotyping": {
            "title": "Genotyping",
            "type": "object",
            "description": "Options for variant calling",
            "default": "",
            "properties": {
                "run_genotyping": {
                    "type": "boolean",
                    "fa_icon": "fas fa-power-off",
                    "description": "Specify to turn on genotyping of BAM files.",
                    "help_text": "Specify to turn on genotyping. `--genotyping_source` and `--genotyping_tool` must also be provided together with this option."
                },
                "genotyping_source": {
                    "type": "string",
                    "description": "Specify which input BAM to use for genotyping.",
                    "help_text": "Specify which BAM file to use for genotyping, depending on what BAM processing modules you have turned on. Options are: 'raw' (to use the reads used as input for damage manipulation); 'pmd' (for pmdtools output); 'trimmed' (for base-clipped BAMs. Base-clipped-PMD-filtered BAMs if both filtering and trimming are requested); 'rescaled' (for mapDamage2 rescaling output).\nWarning: Depending on the parameters you provided, 'raw' can refer to all mapped reads, filtered reads (if BAM filtering has been performed), or the deduplicated reads (if deduplication was performed).",
                    "fa_icon": "fas fa-faucet",
                    "enum": ["raw", "pmd", "trimmed", "rescaled"]
                },
                "genotyping_tool": {
                    "type": "string",
                    "fa_icon": "fas fa-hammer",
                    "enum": ["ug", "hc", "freebayes", "pileupcaller", "angsd"],
                    "help_text": "Specify which genotyper to use. Current options are: pileupCaller, ANGSD, GATK UnifiedGenotyper (v3.5), GATK HaplotypeCaller (v4) or FreeBayes.\n\n> Note that while UnifiedGenotyper is more suitable for low-coverage ancient DNA (HaplotypeCaller does de novo assembly around each variant site), be aware GATK v3.5 it is officially deprecated by the Broad Institute (but is used here for compatibility with MultiVCFAnalyzer).",
                    "description": "Specify which genotyper to use."
                },
                "skip_bcftools_stats": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Specify to skip generation of VCF-based variant calling statistics with bcftools.",
                    "help_text": "Specify to disable running of `bcftools stats` against VCF files from GATK and FreeBayes genotypers.\n\nThis will automatically include the FASTA reference for INDEL-related statistics."
                },
                "genotyping_reference_ploidy": {
                    "type": "integer",
                    "default": 2,
                    "description": "Specify the ploidy of the reference organism.",
                    "help_text": "Specify the desired ploidy value of your reference organism for genotyping with GATK or FreeBayes. E.g. if you want to allow heterozygous calls this value should be >= 2.\n\n> Modifies GATK UnifiedGenotyper parameter: `--sample_ploidy`\n> Modifies GATK HaplotypeCaller parameter: `--sample-ploidy`\n> Modifies FreeBayes parameter: `-p`",
                    "fa_icon": "fas fa-pastafarianism"
                },
                "genotyping_pileupcaller_min_base_quality": {
                    "type": "integer",
                    "default": 30,
                    "description": "Specify the base mapping quality to be used for genotyping with pileupCaller.",
                    "help_text": "Specify the minimum base quality to be used when generating the samtools mpileup used as input for genotyping with pileupCaller.\n\n> Modifies samtools mpileup parameter: `-Q`.",
                    "fa_icon": "fas fa-filter"
                },
                "genotyping_pileupcaller_min_map_quality": {
                    "type": "integer",
                    "default": 30,
                    "fa_icon": "fas fa-filter",
                    "description": "Specify the minimum mapping quality to be used for genotyping with pileupCaller.",
                    "help_text": "Specify the minimum mapping quality to be used when generating the samtools mpileup used as input for genotyping with pileupCaller.\n\n> Modifies samtools mpileup parameter: `-q`."
                },
                "genotyping_pileupcaller_bedfile": {
                    "type": "string",
                    "fa_icon": "fas fa-bed",
                    "help_text": "Specify a SNP panel in the form of a BED file of sites at which to generate a pileup for pileupCaller.",
                    "format": "file-path",
                    "description": "Specify the path to SNP panel in BED format for pileupCaller."
                },
                "genotyping_pileupcaller_snpfile": {
                    "type": "string",
                    "help_text": "Specify a SNP panel in [EIGENSTRAT](https://github.com/DReichLab/EIG/blob/master/CONVERTF/README) format of sites to be called with pileupCaller.",
                    "fa_icon": "fas fa-sliders-h",
                    "format": "file-path",
                    "description": "Specify the path to SNP panel in EIGENSTRAT format for pileupCaller."
                },
                "genotyping_pileupcaller_method": {
                    "type": "string",
                    "default": "randomHaploid",
                    "fa_icon": "fas fa-toolbox",
                    "description": "Specify the SNP calling method to use for genotyping with pileupCaller.",
                    "help_text": "Specify the SNP calling method to use for genotyping. 'randomHaploid' will randomly sample a read overlapping the SNP and produce a homozygous genotype with the allele supported by that read (often called 'pseudohaploid' or 'pseudodiploid'). 'randomDiploid` will randomly sample two reads overlapping the SNP and produce a genotype comprised of the two alleles supported by the two reads. 'majorityCall' will produce a genotype that is homozygous for the allele that appears in the majority of reads overlapping the SNP.\n\n> Modifies pileupCaller parameters: `--randomHaploid` `--randomDiploid` `--majorityCall`",
                    "enum": ["randomHaploid", "randomDiploid", "majorityCall"]
                },
                "genotyping_pileupcaller_transitions_mode": {
                    "type": "string",
                    "default": "AllSites",
                    "description": "Specify the calling mode for transitions with pileupCaller.",
                    "help_text": "Specify if genotypes of transition SNPs should be called, set to missing, or excluded from the genotypes respectively.\n\n> Modifies pileupCaller parameter: `--skipTransitions` `--transitionsMissing`",
                    "enum": ["AllSites", "TransitionsMissing", "SkipTransitions"],
                    "fa_icon": "fas fa-toggle-on"
                },
                "genotyping_gatk_call_conf": {
                    "type": "integer",
                    "default": 30,
                    "fa_icon": "fas fa-balance-scale-right",
                    "description": "Specify GATK phred-scaled confidence threshold.",
                    "help_text": "Specify a GATK genotyper phred-scaled confidence threshold of a given SNP/INDEL call.\n\n> Modifies GATK UnifiedGenotyper or HaplotypeCaller parameter: `-stand_call_conf`"
                },
                "genotyping_gatk_dbsnp": {
                    "type": "string",
                    "help_text": "Specify VCF file for output VCF SNP annotation, e.g. if you want to annotate your VCF file with 'rs' SNP IDs. Check GATK documentation for more information. Gzip not accepted.",
                    "fa_icon": "fas fa-pen-alt",
                    "description": "Specify VCF file for SNP annotation of output VCF files for GATK.",
                    "pattern": "^\\S+\\.vcf$",
                    "format": "file-path",
                    "mimetype": "VCF"
                },
                "genotyping_gatk_ug_downsample": {
                    "type": "integer",
                    "default": 250,
                    "fa_icon": "fas fa-icicles",
                    "description": "Specify the maximum depth coverage allowed for genotyping with GATK before down-sampling is turned on.",
                    "help_text": "Specify the maximum depth coverage allowed for genotyping before down-sampling is turned on. Any position with a coverage higher than this value will be randomly down-sampled to this many reads.\n\n> Modifies GATK UnifiedGenotyper parameter: `-dcov`"
                },
                "genotyping_gatk_ug_out_mode": {
                    "type": "string",
                    "default": "EMIT_VARIANTS_ONLY",
                    "description": "Specify GATK UnifiedGenotyper output mode.",
                    "enum": ["EMIT_VARIANTS_ONLY", "EMIT_ALL_CONFIDENT_SITES", "EMIT_ALL_SITES"],
                    "help_text": "Specify GATK UnifiedGenotyper output mode to use when producing the output VCF (i.e. produce calls for every site or just confidence sites.)\n\n> Modifies GATK UnifiedGenotyper parameter: `--output_mode`",
                    "fa_icon": "fas fa-toggle-on"
                },
                "genotyping_gatk_ug_genotype_mode": {
                    "type": "string",
                    "default": "SNP",
                    "description": "Specify UnifiedGenotyper likelihood model.",
                    "enum": ["SNP", "INDEL", "BOTH", "GENERALPLOIDYSNP", "GENERALPLOIDYINDEL"],
                    "fa_icon": "fas fa-project-diagram",
                    "help_text": "Specify GATK UnifiedGenotyper likelihood model, i.e. whether to call only SNPs or INDELS etc.\n\n> Modifies GATK UnifiedGenotyper parameter: `--genotype_likelihoods_model`"
                },
                "genotyping_gatk_ug_keeprealignbam": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Specify to keep the BAM output of re-alignment around variants from GATK UnifiedGenotyper.",
                    "help_text": "Specify to output the BAMs that have realigned reads (with GATK (v3) IndelRealigner) around possible variants for improved genotyping with GATK UnifiedGenotyper in addition to the standard VCF output.\n\nThese BAMs will be stored in the same folder as the corresponding VCF files."
                },
                "genotyping_gatk_ug_defaultbasequalities": {
                    "type": "integer",
                    "default": -1,
                    "description": "Specify to supply a default base quality if a read is missing a base quality score.",
                    "help_text": "Specify a value to set base quality scores for genotyping with GATK UnifiedGenotyper, if reads are missing this information. Might be useful if you have 'synthetically' generated reads (e.g. chopping up a reference genome). Default is set to `-1` which is to not set any default quality (turned off).\n\n> Modifies GATK UnifiedGenotyper parameter: `--defaultBaseQualities`",
                    "fa_icon": "fas fa-redo-alt"
                },
                "genotyping_gatk_hc_out_mode": {
                    "type": "string",
                    "default": "EMIT_VARIANTS_ONLY",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Specify GATK HaplotypeCaller output mode.",
                    "help_text": "Specify the type of sites that should be included in the output VCF after genotyping with GATK HaplotypeCaller (i.e. produce calls for every site or just confidence sites).\n\n> Modifies GATK HaplotypeCaller parameter: `--output_mode`",
                    "enum": ["EMIT_VARIANTS_ONLY", "EMIT_ALL_CONFIDENT_SITES", "EMIT_ALL_ACTIVE_SITES"]
                },
                "genotyping_gatk_hc_emitrefconf": {
                    "type": "string",
                    "default": "GVCF",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Specify HaplotypeCaller mode for emitting reference confidence calls.",
                    "help_text": "Specify GATK HaplotypeCaller mode for emitting reference confidence calls.\n\n> Modifies GATK HaplotypeCaller parameter: `--emit-ref-confidence`",
                    "enum": ["NONE", "BP_RESOLUTION", "GVCF"]
                },
                "genotyping_freebayes_min_alternate_count": {
                    "type": "integer",
                    "default": 1,
                    "description": "Specify minimum required supporting observations of an alternate allele to consider a variant in FreeBayes.",
                    "help_text": "Specify the minimum count of observations supporting an alternate allele within a single individual in order to evaluate the position during genotyping with FreeBayes.\n\n> Modifies FreeBayes parameter: `-C`",
                    "fa_icon": "fas fa-filter"
                },
                "genotyping_freebayes_skip_coverage": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify to skip over regions of high depth by discarding alignments overlapping positions where total read depth is greater than specified in FreeBayes.",
                    "help_text": "Specify to skip over regions of high depth by discarding alignments overlapping positions where total read depth is greater than the specified value during genotyping with FreeBayes. This is set to 0 by default, which deactivates this behaviour.\n\n> Modifies FreeBayes parameter: `-g`",
                    "fa_icon": "fab fa-think-peaks"
                },
                "genotyping_angsd_glmodel": {
                    "type": "string",
                    "default": "samtools",
                    "fa_icon": "fas fa-project-diagram",
                    "description": "Specify which ANGSD genotyping likelihood model to use.",
                    "help_text": "Specify which genotype likelihood model to use in ANGSD.\n\n> Modifies ANGSD parameter: `-GL`",
                    "enum": ["samtools", "gatk", "soapsnp", "syk"]
                },
                "genotyping_angsd_glformat": {
                    "type": "string",
                    "default": "binary",
                    "fa_icon": "fas fa-text-height",
                    "description": "Specify the formatting of the output VCF for ANGSD genotype likelihood results.",
                    "help_text": "Specifies what type of genotyping likelihood file format will be output by ANGSD.\n\nThe options refer to the following descriptions respectively:\n\n- `binary`: binary output of all 10 log genotype likelihood\n- `beagle_binary`: beagle likelihood file\n- `binary_three`: binary 3 times likelihood\n- `text`: text output of all 10 log genotype likelihoods.\n\nSee the [ANGSD documentation](http://www.popgen.dk/angsd/) for more information on which to select for your downstream applications.\n\n> Modifies ANGSD parameter: `-doGlf`",
                    "enum": ["binary", "beagle_binary", "binary_three", "text"]
                }
            },
            "fa_icon": "fas fa-sliders-h",
            "help_text": "There are options for different genotypers (or genotype likelihood calculators) to be used. We suggest you read the documentation of each tool to find the ones that suit your needs.\n\nDocumentation for each tool:\n\n- GATK UnifiedGenotyper\n- GATK HaplotypeCaller\n- FreeBayes\n- sequenceTools pileupCaller\n\nGenotyping is performed per sample (i.e. after all types of libraries are merged), except for pileupCaller which gathers all double-stranded and single-stranded (same-type merged) libraries respectively.\nSome genotypers require additional files to be specified in the reference sheet, or using command line parameters. When using a reference sheet, only references with the required filed specified in the respective columns will be used for genotyping. "
        },
        "mitochondrial_to_nuclear_ratio": {
            "title": "Mitochondrial to Nuclear Ratio",
            "type": "object",
            "description": "Options for the calculation of ratio of reads to one chromosome/FASTA entry against all others.",
            "default": "",
            "help_text": "If using TSV input, Mitochondrial to Nuclear Ratio calculation is calculated per deduplicated library (after lane merging)",
            "fa_icon": "fas fa-balance-scale-left",
            "properties": {
                "run_mtnucratio": {
                    "type": "boolean",
                    "description": "Specify to turn on mitochondrial to nuclear ratio calculation.",
                    "help_text": "Specify to turn on estimation of the ratio of mitochondrial to nuclear reads.",
                    "fa_icon": "fas fa-power-off"
                },
                "mitochondrion_header": {
                    "type": "string",
                    "default": "MT",
                    "description": "Specify the name of the reference FASTA entry corresponding to the mitochondrial genome.",
                    "help_text": "Specify the FASTA entry in the reference file specified as `--fasta`, which acts as the mitochondrial 'chromosome' to base the ratio calculation on. The tool only accepts the first section of the header before the first space. The default chromosome name is based on hs37d5/GrCH37 human reference genome.",
                    "fa_icon": "fas fa-heading"
                }
            }
        },
        "mapping_statistics": {
            "title": "Mapping statistics",
            "type": "object",
            "description": "Options for the calculation of mapping statistics",
            "default": "",
            "properties": {
                "mapstats_skip_preseq": {
                    "type": "boolean",
                    "help_text": "Specify to turn off the computation of library complexity estimation.",
                    "description": "Specify to turn off the computation of library complexity estimation with preseq.",
                    "fa_icon": "fas fa-forward"
                },
                "mapstats_preseq_mode": {
                    "type": "string",
                    "default": "c_curve",
                    "help_text": "Specify which mode of preseq to run.\n\nFrom the [preseq documentation](http://smithlabresearch.org/wp-content/uploads/manual.pdf):\n\nc curve is used to compute the expected complexity curve of a mapped read file with a hypergeometric formula\n\nlc extrap is used to generate the expected yield for theoretical larger experiments and bounds on the number of distinct reads in the library and the associated confidence intervals, which is computed by bootstrapping the observed duplicate counts histogram.",
                    "description": "Specify which mode of preseq to run.",
                    "fa_icon": "fas fa-toggle-on",
                    "enum": ["c_curve", "lc_extrap"]
                },
                "mapstats_preseq_stepsize": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Specify the step size (i.e., sampling regularity) of preseq.",
                    "help_text": "Specify the step size of preseq's c_curve and lc_extrap methods. This can be useful when few reads are present and allow preseq to be used for extrapolation of shallow sequencing results.\n\n\n> Modifies preseq parameter:\n> `-s`",
                    "fa_icon": "fas fa-shoe-prints"
                },
                "mapstats_preseq_terms": {
                    "type": "integer",
                    "default": 100,
                    "fa_icon": "fas fa-sort-numeric-up-alt",
                    "help_text": "Specify the maximum number of terms that preseq's lc_extrap mode will use.\n\n> Modifies preseq lc_extrap parameter: `-x`",
                    "description": "Specify the maximum number of terms that preseq's lc_extrap mode will use."
                },
                "mapstats_preseq_maxextrap": {
                    "type": "integer",
                    "default": 10000000000,
                    "fa_icon": "fas fa-ban",
                    "help_text": "Specify the maximum extrapolation that preseq's lc_extrap mode will perform.\n\n> Modifies preseq lc_extrap parameter: `-e`",
                    "description": "Specify the maximum extrapolation to use for preseq's lc_extrap mode."
                },
                "mapstats_preseq_bootstrap": {
                    "type": "integer",
                    "default": 100,
                    "fa_icon": "fab fa-bootstrap",
                    "help_text": "Specify the number of bootstraps preseq's lc_extrap mode will perform to calculate confidence intervals.\n\n> Modifies preseq lc_extrap parameter: `-n`",
                    "description": "Specify number of bootstraps to perform in preseq's lc_extrap mode."
                },
                "mapstats_preseq_cval": {
                    "type": "number",
                    "default": 0.95,
                    "fa_icon": "fas fa-check-circle",
                    "help_text": "Specify the allowed level of confidence intervals used for prerseq's lc_extrap mode.\n\n> Modifies preseq lc_extrap parameter: `-c`",
                    "description": "Specify confidence interval level for preseq's lc_extrap mode."
                },
                "mapstats_preseq_defects_mode": {
                    "type": "boolean",
                    "description": "Specify to turn on preseq defects mode to extrapolate without testing for defects in lc_extrap mode.",
                    "help_text": "Specify to activate defects mode of `preseq lc_extrap`, which runs the extrapolation without testing for defects.\n\n> Modifies preseq lc_extrap parameter: `-D`",
                    "fa_icon": "fas fa-power-off"
                },
                "skip_qualimap": {
                    "type": "boolean",
                    "description": "Specify to turn off coverage calculation with Qualimap.",
                    "fa_icon": "fas fa-forward"
                },
                "snpcapture_bed": {
                    "type": "string",
                    "description": "Specify path to SNP capture positions in BED format for coverage calculations with Qualimap."
                }
            },
            "fa_icon": "fas fa-search"
        },
        "adna_damage_analysis": {
            "title": "(aDNA) Damage Analysis",
            "type": "object",
            "description": "Options for calculating and filtering for characteristic ancient DNA damage patterns.",
            "default": "",
            "fa_icon": "fas fa-chart-line",
            "help_text": "More documentation can be found at the follow links for:\n\n[DamageProfiler](https://github.com/Integrative-Transcriptomics/DamageProfiler)\n\nIf using TSV input, DamageProfiler is performed per library, i.e. after lane merging. BAM Trimming is only performed on non-UDG and half-UDG treated data.",
            "properties": {
                "skip_damagecalculation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Specify to turn off computation of DNA damage profiles.",
                    "description": "Specify to turn off ancient DNA damage calculation."
                },
                "damagecalculation_tool": {
                    "type": "string",
                    "default": "damageprofiler",
                    "enum": ["damageprofiler", "mapdamage"],
                    "fa_icon": "fas fa-hammer",
                    "description": "Specify the tool to use for damage calculation.",
                    "help_text": "Specify the tool to be used for damage calculation. DamageProfiler is generally faster than mapDamage2, but the latter has an option to limit the number of reads used. This can significantly speed up the processing of very large files, where the damage estimates are already accurate after processing only a fraction of the input."
                },
                "damagecalculation_yaxis": {
                    "type": "number",
                    "default": 0.3,
                    "description": "Specify the maximum misincorporation frequency that should be displayed on damage plot.",
                    "help_text": "Specify the maximum misincorporation frequency that should be displayed in the damage plot.\n\n> Modifies DamageProfiler parameter: `-yaxis_dp_max` or mapDamage2 parameter: `--ymax`",
                    "fa_icon": "fas fa-ruler-combined"
                },
                "damagecalculation_xaxis": {
                    "type": "integer",
                    "default": 25,
                    "description": "Specify number of bases of each read to be considered for plotting damage estimation.",
                    "help_text": "Specify the number of bases to be considered for plotting nucleotide misincorporations.\n\n> Modifies DamageProfiler parameter: `-t` or mapDamage2 parameter: `-m`",
                    "fa_icon": "far fa-chart-bar"
                },
                "damagecalculation_damageprofiler_length": {
                    "type": "integer",
                    "default": 100,
                    "description": "Specify the length filter for DamageProfiler.",
                    "help_text": "Specify the number of bases which are considered for frequency computations.\n\n> Modifies DamageProfiler parameter: `-l`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "damagecalculation_mapdamage_downsample": {
                    "type": "integer",
                    "default": 0,
                    "fa_icon": "fas fa-compress-alt",
                    "description": "Specify the maximum number of reads to consider for damage calculation with mapDamage.",
                    "help_text": "Specify the maximum number of reads used for damage calculation in mapDamage2. This can be used to significantly reduce the amount of time required for damage assessment. Note that a too low value can also obtain incorrect results.\n\n> Modifies mapDamage2 parameter: `-n`"
                }
            }
        },
        "feature_annotation_statistics": {
            "title": "Feature Annotation Statistics",
            "type": "object",
            "description": "Options for calculating reference annotation statistics (e.g. gene coverages)",
            "default": "",
            "properties": {
                "run_bedtools_coverage": {
                    "type": "boolean",
                    "description": "Specify to turn on calculation of number of reads, depth and breadth coverage of features in reference with bedtools.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Specify to turn on the bedtools module, producing statistics for breadth (or percent coverage), and depth (or X fold) coverages.\n\n> Modifies bedtools coverage parameter: `-mean`"
                },
                "mapstats_bedtools_featurefile": {
                    "type": "string",
                    "description": "Specify path to GFF or BED file containing positions of features in reference file for bedtools.",
                    "fa_icon": "fas fa-file-signature",
                    "help_text": "Specify the path to a GFF/BED containing the feature coordinates (or any acceptable input for [`bedtools coverage`](https://bedtools.readthedocs.io/en/latest/content/tools/coverage.html)). Must be in quotes.\n"
                }
            },
            "fa_icon": "fas fa-scroll",
            "help_text": "If you're interested in looking at coverage stats for certain features on your reference such as genes, SNPs etc., you can use the following bedtools module for this purpose.\n\nMore documentation on bedtools can be seen in the [bedtools\ndocumentation](https://bedtools.readthedocs.io/en/latest/)\n\nIf using TSV input, bedtools is run after library merging of same-named library BAMs that have the same type of UDG treatment."
        },
        "host_removal": {
            "title": "Host Removal",
            "type": "object",
            "description": "Options for removing host-mapped reads",
            "default": "",
            "properties": {
                "run_host_removal": {
                    "type": "boolean",
                    "description": "Specify to turn on creation of pre-adapter-removal and/or read-pair-merging FASTQ files without reads that mapped to reference (e.g. for public upload of privacy sensitive non-host data).",
                    "help_text": "Specify to recreate pre-adapter-removal and/or read-pair-merging FASTQ files but without reads that mapped to reference (e.g. for public upload of privacy-sensitive non-host data)",
                    "fa_icon": "fas fa-power-off"
                },
                "host_removal_mode": {
                    "type": "string",
                    "default": "remove",
                    "description": "Specify the host-mapped read removal mode.",
                    "help_text": "Specify the host-mapped read removal mode.\n\n> Modifies extract_map_reads.py parameter: -m",
                    "fa_icon": "fas fa-toggle-on",
                    "enum": ["remove", "replace"]
                }
            },
            "fa_icon": "fas fa-user-slash"
        },
        "contamination_estimation": {
            "title": "Contamination estimation",
            "type": "object",
            "description": "Options for the estimation of contamination in human data",
            "default": "",
            "fa_icon": "fas fa-radiation-alt",
            "properties": {
                "run_contamination_estimation_angsd": {
                    "type": "boolean",
                    "description": "Specify to turn on nuclear contamination estimation for genomes with ANGSD.",
                    "help_text": "Specify to run nuclear DNA contamination estimation with ANGSD.",
                    "fa_icon": "fas fa-power-off"
                },
                "contamination_estimation_angsd_chrom_name": {
                    "type": "string",
                    "default": "X",
                    "description": "Specify the name of the chromosome to be used for contamination estimation with ANGSD.",
                    "help_text": "Specify the name of the chromosome to be used for contamination estimation with ANGSD as specified in your FASTA/BAM header, e.g. 'X' for hs37d5 or 'chrX' for hg19",
                    "fa_icon": "fas fa-address-card"
                },
                "contamination_estimation_angsd_range_from": {
                    "type": "integer",
                    "default": 5000000,
                    "description": "Specify the first position on the chromosome to be used for contamination estimation with ANGSD.",
                    "help_text": "Specify the beginning of the genetic range that should be utilised for nuclear contamination estimation with ANGSD.",
                    "fa_icon": "fas fa-map-marker-alt"
                },
                "contamination_estimation_angsd_range_to": {
                    "type": "integer",
                    "default": 154900000,
                    "help_text": "Specify the end of the genetic range that should be utilised for nuclear contamination estimation with ANGSD.",
                    "description": "Specify the last position on the chromosome to be used for contamination estimation with ANGSD.",
                    "fa_icon": "fas fa-map-marker-alt"
                },
                "contamination_estimation_angsd_mapq": {
                    "type": "integer",
                    "default": 30,
                    "help_text": "Specify the minimum mapping quality reads should have for contamination estimation with ANGSD.\n\n> Modifies ANGSD parameter: `-minMapQ`",
                    "description": "Specify the minimum mapping quality reads should have for contamination estimation with ANGSD.",
                    "fa_icon": "fas fa-filter"
                },
                "contamination_estimation_angsd_minq": {
                    "type": "integer",
                    "default": 30,
                    "description": "Specify the minimum base quality reads should have for contamination estimation with ANGSD.",
                    "help_text": "Specify the minimum base quality reads should have for contamination estimation with ANGSD.\n\n> Modifies ANGSD parameter: `-minQ`",
                    "fa_icon": "fas fa-filter"
                },
                "contamination_estimation_angsd_hapmap": {
                    "type": "string",
                    "default": "${projectDir}/assets/angsd_resources/HapMapChrX.gz",
                    "description": "Specify path to HapMap file of chromosome for contamination estimation with ANGSD.",
                    "help_text": "Specify a path to HapMap file of chromosome for contamination estimation with ANGSD. The haplotype map, or \"HapMap\", records the location of haplotype blocks and their tag SNPs.",
                    "fa_icon": "fas fa-map"
                }
            }
        },
        "human_sex_determination": {
            "title": "Human Sex Determination",
            "type": "object",
            "description": "Options for the calculation of genetic sex of human individuals.",
            "default": "",
            "properties": {
                "run_sexdeterrmine": {
                    "type": "boolean",
                    "fa_icon": "fas fa-power-off",
                    "description": "Specify to turn on sex determination for genomes mapped to human reference genomes with Sex.DetERRmine.",
                    "help_text": "Specify to run genetic sex determination."
                },
                "sexdeterrmine_bedfile": {
                    "type": "string",
                    "fa_icon": "fas fa-bed",
                    "description": "Specify path to SNP panel in BED format for error bar calculation.",
                    "help_text": "Specify a BED file with SNPs to be used for X-/Y-rate calculation. Running without this parameter will considerably increase runtime, and render the resulting error bars untrustworthy. Theoretically, any set of SNPs that are distant enough that two SNPs are unlikely to be covered by the same read can be used here. The programme was coded with the 1240k panel in mind."
                }
            },
            "fa_icon": "fas fa-transgender-alt",
            "help_text": ""
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/preprocessing"
        },
        {
            "$ref": "#/definitions/mapping"
        },
        {
            "$ref": "#/definitions/bam_filtering"
        },
        {
            "$ref": "#/definitions/metagenomics"
        },
        {
            "$ref": "#/definitions/deduplication"
        },
        {
            "$ref": "#/definitions/damage_manipulation"
        },
        {
            "$ref": "#/definitions/genotyping"
        },
        {
            "$ref": "#/definitions/mitochondrial_to_nuclear_ratio"
        },
        {
            "$ref": "#/definitions/mapping_statistics"
        },
        {
            "$ref": "#/definitions/adna_damage_analysis"
        },
        {
            "$ref": "#/definitions/feature_annotation_statistics"
        },
        {
            "$ref": "#/definitions/host_removal"
        },
        {
            "$ref": "#/definitions/human_sex_determination"
        },
        {
            "$ref": "#/definitions/contamination_estimation"
        },
        {
            "$ref": "#/definitions/contamination_estimation"
        }
    ]
}
