nextflow_pipeline {

    name "Test pipeline: NFCORE_EAGER"
    script "main.nf"
    tag "pipeline"
    tag "nfcore_eager"
    tag "test"

    test("test_profile") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot( path("$outputDir/bam_filtering")            ).match("bam_filtering") },
                { assert snapshot( path("$outputDir/bam_input_stats")          ).match("bam_input_stats") },
                { assert snapshot( path("$outputDir/deduplication")            ).match("deduplication") },
                { assert snapshot( path("$outputDir/mapping")                  ).match("mapping") },
                { assert snapshot( path("$outputDir/samtools")                 ).match("samtools") }, // not sure what this is...

                // Exceptions (variable md5sums)
                { assert snapshot(
                    getAllFilesFromDir("$outputDir/damage_estimation/", '.txt')
                    ).match("damage_estimation") // ## PROBLEM: NEED TO RECUSRIVELY LIST ALL FILES IN ALL THE SUB DIRECTORIES
                }, // TODO: add additional asserts for svg/pdf exists, and log contains line ->
                //{ assert snapshot( path("$outputDir/preprocessing/").list().findAll{ it.toString() ==~ /.*\.(json|html|log)/ }).match("processing_fastp") }, // TODO: check all three stable (I suspect log/html might not be)
                //{ assert snapshot( path("$outputDir/preprocessing/fastqc_raw").list().findAll{ it.toString() }).match("processing_fastqc_raw") },
                //{ assert snapshot( path("$outputDir/preprocessing/fastqc_preprocessed").list().findAll{ it.toString() }).match("processing_fastqc_preprocessed") },
                //{ assert snapshot( path("$outputDir/final_bams")               ).match("final_bams") },
                //{ assert snapshot( path("$outputDir/mapstats")                 ).match("mapstats") },
                { assert new File("$outputDir/pipeline_info/nf_core_pipeline_software_mqc_versions.yml").exists() },
                { assert new File("$outputDir/multiqc/multiqc_report.html").exists() },
                { assert new File("$outputDir/multiqc/multiqc_data/").exists() }
            )
        }
    }
}

// Recursively list all files in a directory and its subdirectories matching a given suffix
def getAllFilesFromDir(dir, suffix) {
    def output = []
    new File(dir).eachFileRecurse() {
        if (it.name.toString().endsWith(suffix)) {
            output.add(it)
        }
    }

    println(output)
    return output
}


// This works, how can we incorporate this into the snapshot?
// new File('/home/james/Downloads/').eachFileRecurse() {
//     if(it.name.endsWith('.md')) {
//         println it
//     }
// }

//// EVEN BETTER
// def mydir = "/home/$USER/Downloads"

// def getAllFilesFromDir(dir) {
//  def output = []
//  new File(dir).eachFileRecurse() {
//    output.add(it)
//  }
// return output
// }

// getAllFilesFromDir(mydir)
